// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vr/vr-proto.proto

#include "netbench_udp_protobuf.h"
#include "netbench_udp_requestpb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2frequest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2frequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2frequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UnloggedRequest;
}  // namespace protobuf_common_2frequest_2eproto
namespace protobuf_vr_2fvr_2dproto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vr_2fvr_2dproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DoViewChangeMessage_LogEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vr_2fvr_2dproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RecoveryResponseMessage_LogEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vr_2fvr_2dproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StartViewMessage_LogEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vr_2fvr_2dproto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StateTransferMessage_LogEntry;
}  // namespace protobuf_vr_2fvr_2dproto_2eproto
namespace specpaxos {
namespace vr {
namespace proto {
class RequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestMessage>
      _instance;
} _RequestMessage_default_instance_;
class ReplyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplyMessage>
      _instance;
} _ReplyMessage_default_instance_;
class UnloggedRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnloggedRequestMessage>
      _instance;
} _UnloggedRequestMessage_default_instance_;
class UnloggedReplyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnloggedReplyMessage>
      _instance;
} _UnloggedReplyMessage_default_instance_;
class PrepareMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareMessage>
      _instance;
} _PrepareMessage_default_instance_;
class PrepareOKMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareOKMessage>
      _instance;
} _PrepareOKMessage_default_instance_;
class CommitMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitMessage>
      _instance;
} _CommitMessage_default_instance_;
class RequestStateTransferMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestStateTransferMessage>
      _instance;
} _RequestStateTransferMessage_default_instance_;
class StateTransferMessage_LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateTransferMessage_LogEntry>
      _instance;
} _StateTransferMessage_LogEntry_default_instance_;
class StateTransferMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateTransferMessage>
      _instance;
} _StateTransferMessage_default_instance_;
class StartViewChangeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartViewChangeMessage>
      _instance;
} _StartViewChangeMessage_default_instance_;
class DoViewChangeMessage_LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoViewChangeMessage_LogEntry>
      _instance;
} _DoViewChangeMessage_LogEntry_default_instance_;
class DoViewChangeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoViewChangeMessage>
      _instance;
} _DoViewChangeMessage_default_instance_;
class StartViewMessage_LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartViewMessage_LogEntry>
      _instance;
} _StartViewMessage_LogEntry_default_instance_;
class StartViewMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartViewMessage>
      _instance;
} _StartViewMessage_default_instance_;
class RecoveryMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoveryMessage>
      _instance;
} _RecoveryMessage_default_instance_;
class RecoveryResponseMessage_LogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoveryResponseMessage_LogEntry>
      _instance;
} _RecoveryResponseMessage_LogEntry_default_instance_;
class RecoveryResponseMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoveryResponseMessage>
      _instance;
} _RecoveryResponseMessage_default_instance_;
}  // namespace proto
}  // namespace vr
}  // namespace specpaxos
namespace protobuf_vr_2fvr_2dproto_2eproto {
static void InitDefaultsRequestMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_RequestMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::RequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::RequestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RequestMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequestMessage}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsReplyMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_ReplyMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::ReplyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::ReplyMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReplyMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReplyMessage}, {}};

static void InitDefaultsUnloggedRequestMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_UnloggedRequestMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::UnloggedRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::UnloggedRequestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnloggedRequestMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnloggedRequestMessage}, {
      &protobuf_common_2frequest_2eproto::scc_info_UnloggedRequest.base,}};

static void InitDefaultsUnloggedReplyMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_UnloggedReplyMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::UnloggedReplyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::UnloggedReplyMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnloggedReplyMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnloggedReplyMessage}, {}};

static void InitDefaultsPrepareMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_PrepareMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::PrepareMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::PrepareMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrepareMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrepareMessage}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsPrepareOKMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_PrepareOKMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::PrepareOKMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::PrepareOKMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrepareOKMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrepareOKMessage}, {}};

static void InitDefaultsCommitMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_CommitMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::CommitMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::CommitMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommitMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommitMessage}, {}};

static void InitDefaultsRequestStateTransferMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_RequestStateTransferMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::RequestStateTransferMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::RequestStateTransferMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestStateTransferMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestStateTransferMessage}, {}};

static void InitDefaultsStateTransferMessage_LogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_StateTransferMessage_LogEntry_default_instance_;
    new (ptr) ::specpaxos::vr::proto::StateTransferMessage_LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::StateTransferMessage_LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StateTransferMessage_LogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStateTransferMessage_LogEntry}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsStateTransferMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_StateTransferMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::StateTransferMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::StateTransferMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StateTransferMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStateTransferMessage}, {
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StateTransferMessage_LogEntry.base,}};

static void InitDefaultsStartViewChangeMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_StartViewChangeMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::StartViewChangeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::StartViewChangeMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StartViewChangeMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStartViewChangeMessage}, {}};

static void InitDefaultsDoViewChangeMessage_LogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_DoViewChangeMessage_LogEntry_default_instance_;
    new (ptr) ::specpaxos::vr::proto::DoViewChangeMessage_LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::DoViewChangeMessage_LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DoViewChangeMessage_LogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDoViewChangeMessage_LogEntry}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsDoViewChangeMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_DoViewChangeMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::DoViewChangeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::DoViewChangeMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DoViewChangeMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDoViewChangeMessage}, {
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_DoViewChangeMessage_LogEntry.base,}};

static void InitDefaultsStartViewMessage_LogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_StartViewMessage_LogEntry_default_instance_;
    new (ptr) ::specpaxos::vr::proto::StartViewMessage_LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::StartViewMessage_LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StartViewMessage_LogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStartViewMessage_LogEntry}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsStartViewMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_StartViewMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::StartViewMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::StartViewMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StartViewMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStartViewMessage}, {
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewMessage_LogEntry.base,}};

static void InitDefaultsRecoveryMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_RecoveryMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::RecoveryMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::RecoveryMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoveryMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoveryMessage}, {}};

static void InitDefaultsRecoveryResponseMessage_LogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_RecoveryResponseMessage_LogEntry_default_instance_;
    new (ptr) ::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecoveryResponseMessage_LogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecoveryResponseMessage_LogEntry}, {
      &protobuf_common_2frequest_2eproto::scc_info_Request.base,}};

static void InitDefaultsRecoveryResponseMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::specpaxos::vr::proto::_RecoveryResponseMessage_default_instance_;
    new (ptr) ::specpaxos::vr::proto::RecoveryResponseMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::specpaxos::vr::proto::RecoveryResponseMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecoveryResponseMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecoveryResponseMessage}, {
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryResponseMessage_LogEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RequestMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplyMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnloggedRequestMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnloggedReplyMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareOKMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestStateTransferMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateTransferMessage_LogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateTransferMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartViewChangeMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoViewChangeMessage_LogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoViewChangeMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartViewMessage_LogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartViewMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoveryMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoveryResponseMessage_LogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoveryResponseMessage.base);
}

::google::protobuf::Metadata file_level_metadata[18];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestMessage, req_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, reply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::ReplyMessage, clientreqid_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedRequestMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedRequestMessage, req_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedReplyMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedReplyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::UnloggedReplyMessage, reply_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, batchstart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareMessage, request_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareOKMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareOKMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareOKMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareOKMessage, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::PrepareOKMessage, replicaidx_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::CommitMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::CommitMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::CommitMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::CommitMessage, opnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestStateTransferMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestStateTransferMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestStateTransferMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RequestStateTransferMessage, opnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage_LogEntry, hash_),
  2,
  3,
  1,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StateTransferMessage, entries_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewChangeMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewChangeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewChangeMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewChangeMessage, replicaidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewChangeMessage, lastcommitted_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry, hash_),
  2,
  3,
  1,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, lastnormalview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, lastop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, lastcommitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::DoViewChangeMessage, replicaidx_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage_LogEntry, hash_),
  2,
  3,
  1,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, lastop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, lastcommitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::StartViewMessage, entries_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryMessage, replicaidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryMessage, nonce_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, opnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry, hash_),
  2,
  3,
  1,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, lastop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, lastcommitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::specpaxos::vr::proto::RecoveryResponseMessage, replicaidx_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::specpaxos::vr::proto::RequestMessage)},
  { 7, 16, sizeof(::specpaxos::vr::proto::ReplyMessage)},
  { 20, 26, sizeof(::specpaxos::vr::proto::UnloggedRequestMessage)},
  { 27, 33, sizeof(::specpaxos::vr::proto::UnloggedReplyMessage)},
  { 34, 43, sizeof(::specpaxos::vr::proto::PrepareMessage)},
  { 47, 55, sizeof(::specpaxos::vr::proto::PrepareOKMessage)},
  { 58, 65, sizeof(::specpaxos::vr::proto::CommitMessage)},
  { 67, 74, sizeof(::specpaxos::vr::proto::RequestStateTransferMessage)},
  { 76, 86, sizeof(::specpaxos::vr::proto::StateTransferMessage_LogEntry)},
  { 91, 99, sizeof(::specpaxos::vr::proto::StateTransferMessage)},
  { 102, 110, sizeof(::specpaxos::vr::proto::StartViewChangeMessage)},
  { 113, 123, sizeof(::specpaxos::vr::proto::DoViewChangeMessage_LogEntry)},
  { 128, 139, sizeof(::specpaxos::vr::proto::DoViewChangeMessage)},
  { 145, 155, sizeof(::specpaxos::vr::proto::StartViewMessage_LogEntry)},
  { 160, 169, sizeof(::specpaxos::vr::proto::StartViewMessage)},
  { 173, 180, sizeof(::specpaxos::vr::proto::RecoveryMessage)},
  { 182, 192, sizeof(::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry)},
  { 197, 208, sizeof(::specpaxos::vr::proto::RecoveryResponseMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_RequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_ReplyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_UnloggedRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_UnloggedReplyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_PrepareMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_PrepareOKMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_CommitMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_RequestStateTransferMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_StateTransferMessage_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_StateTransferMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_StartViewChangeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_DoViewChangeMessage_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_DoViewChangeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_StartViewMessage_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_StartViewMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_RecoveryMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_RecoveryResponseMessage_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::specpaxos::vr::proto::_RecoveryResponseMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vr/vr-proto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021vr/vr-proto.proto\022\022specpaxos.vr.proto\032"
      "\024common/request.proto\"1\n\016RequestMessage\022"
      "\037\n\003req\030\001 \002(\0132\022.specpaxos.Request\"O\n\014Repl"
      "yMessage\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022\r\n"
      "\005reply\030\003 \002(\014\022\023\n\013clientreqid\030\004 \002(\004\"A\n\026Unl"
      "oggedRequestMessage\022\'\n\003req\030\001 \002(\0132\032.specp"
      "axos.UnloggedRequest\"%\n\024UnloggedReplyMes"
      "sage\022\r\n\005reply\030\001 \002(\014\"f\n\016PrepareMessage\022\014\n"
      "\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022\022\n\nbatchstart"
      "\030\003 \002(\004\022#\n\007request\030\004 \003(\0132\022.specpaxos.Requ"
      "est\"C\n\020PrepareOKMessage\022\014\n\004view\030\001 \002(\004\022\r\n"
      "\005opnum\030\002 \002(\004\022\022\n\nreplicaIdx\030\003 \002(\r\",\n\rComm"
      "itMessage\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\":"
      "\n\033RequestStateTransferMessage\022\014\n\004view\030\001 "
      "\002(\004\022\r\n\005opnum\030\002 \002(\004\"\342\001\n\024StateTransferMess"
      "age\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022B\n\007entr"
      "ies\030\003 \003(\01321.specpaxos.vr.proto.StateTran"
      "sferMessage.LogEntry\032i\n\010LogEntry\022\014\n\004view"
      "\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022#\n\007request\030\003 \002(\0132\022"
      ".specpaxos.Request\022\r\n\005state\030\004 \001(\r\022\014\n\004has"
      "h\030\005 \001(\014\"Q\n\026StartViewChangeMessage\022\014\n\004vie"
      "w\030\001 \002(\004\022\022\n\nreplicaIdx\030\002 \002(\r\022\025\n\rlastCommi"
      "tted\030\003 \002(\004\"\244\002\n\023DoViewChangeMessage\022\014\n\004vi"
      "ew\030\001 \002(\004\022\026\n\016lastNormalView\030\002 \002(\004\022\016\n\006last"
      "Op\030\003 \002(\004\022\025\n\rlastCommitted\030\004 \002(\004\022A\n\007entri"
      "es\030\005 \003(\01320.specpaxos.vr.proto.DoViewChan"
      "geMessage.LogEntry\022\022\n\nreplicaIdx\030\006 \002(\r\032i"
      "\n\010LogEntry\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022"
      "#\n\007request\030\003 \002(\0132\022.specpaxos.Request\022\r\n\005"
      "state\030\004 \001(\r\022\014\n\004hash\030\005 \001(\014\"\362\001\n\020StartViewM"
      "essage\022\014\n\004view\030\001 \002(\004\022\016\n\006lastOp\030\002 \002(\004\022\025\n\r"
      "lastCommitted\030\003 \002(\004\022>\n\007entries\030\004 \003(\0132-.s"
      "pecpaxos.vr.proto.StartViewMessage.LogEn"
      "try\032i\n\010LogEntry\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002"
      " \002(\004\022#\n\007request\030\003 \002(\0132\022.specpaxos.Reques"
      "t\022\r\n\005state\030\004 \001(\r\022\014\n\004hash\030\005 \001(\014\"4\n\017Recove"
      "ryMessage\022\022\n\nreplicaIdx\030\001 \002(\r\022\r\n\005nonce\030\002"
      " \002(\004\"\243\002\n\027RecoveryResponseMessage\022\014\n\004view"
      "\030\001 \002(\004\022\r\n\005nonce\030\002 \002(\004\022E\n\007entries\030\003 \003(\01324"
      ".specpaxos.vr.proto.RecoveryResponseMess"
      "age.LogEntry\022\016\n\006lastOp\030\004 \001(\004\022\025\n\rlastComm"
      "itted\030\005 \001(\004\022\022\n\nreplicaIdx\030\006 \002(\r\032i\n\010LogEn"
      "try\022\014\n\004view\030\001 \002(\004\022\r\n\005opnum\030\002 \002(\004\022#\n\007requ"
      "est\030\003 \002(\0132\022.specpaxos.Request\022\r\n\005state\030\004"
      " \001(\r\022\014\n\004hash\030\005 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1778);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vr/vr-proto.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2frequest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vr_2fvr_2dproto_2eproto
namespace specpaxos {
namespace vr {
namespace proto {

// ===================================================================

void RequestMessage::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_RequestMessage_default_instance_._instance.get_mutable()->req_ = const_cast< ::specpaxos::Request*>(
      ::specpaxos::Request::internal_default_instance());
}
void RequestMessage::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestMessage::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestMessage::RequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RequestMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.RequestMessage)
}
RequestMessage::RequestMessage(const RequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::specpaxos::Request(*from.req_);
  } else {
    req_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.RequestMessage)
}

void RequestMessage::SharedCtor() {
  req_ = NULL;
}

RequestMessage::~RequestMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.RequestMessage)
  SharedDtor();
}

void RequestMessage::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
}

void RequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestMessage& RequestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_RequestMessage.base);
  return *internal_default_instance();
}


void RequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.RequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(req_ != NULL);
    req_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.RequestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .specpaxos.Request req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.RequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.RequestMessage)
  return false;
#undef DO_
}

void RequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.RequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .specpaxos.Request req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.RequestMessage)
}

::google::protobuf::uint8* RequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.RequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .specpaxos.Request req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.RequestMessage)
  return target;
}

size_t RequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.RequestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .specpaxos.Request req = 1;
  if (has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.RequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.RequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.RequestMessage)
    MergeFrom(*source);
  }
}

void RequestMessage::MergeFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.RequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::specpaxos::Request::MergeFrom(from.req());
  }
}

void RequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.RequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMessage::CopyFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.RequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void RequestMessage::Swap(RequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestMessage::InternalSwap(RequestMessage* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplyMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyMessage::kViewFieldNumber;
const int ReplyMessage::kOpnumFieldNumber;
const int ReplyMessage::kReplyFieldNumber;
const int ReplyMessage::kClientreqidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyMessage::ReplyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_ReplyMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.ReplyMessage)
}
ReplyMessage::ReplyMessage(const ReplyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reply()) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientreqid_) -
    reinterpret_cast<char*>(&view_)) + sizeof(clientreqid_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.ReplyMessage)
}

void ReplyMessage::SharedCtor() {
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientreqid_) -
      reinterpret_cast<char*>(&view_)) + sizeof(clientreqid_));
}

ReplyMessage::~ReplyMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.ReplyMessage)
  SharedDtor();
}

void ReplyMessage::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReplyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplyMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplyMessage& ReplyMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_ReplyMessage.base);
  return *internal_default_instance();
}


void ReplyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.ReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reply_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clientreqid_) -
        reinterpret_cast<char*>(&view_)) + sizeof(clientreqid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReplyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.ReplyMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reply = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 clientreqid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_clientreqid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientreqid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.ReplyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.ReplyMessage)
  return false;
#undef DO_
}

void ReplyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.ReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required bytes reply = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reply(), output);
  }

  // required uint64 clientreqid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->clientreqid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.ReplyMessage)
}

::google::protobuf::uint8* ReplyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.ReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required bytes reply = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reply(), target);
  }

  // required uint64 clientreqid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->clientreqid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.ReplyMessage)
  return target;
}

size_t ReplyMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.ReplyMessage)
  size_t total_size = 0;

  if (has_reply()) {
    // required bytes reply = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reply());
  }

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  if (has_clientreqid()) {
    // required uint64 clientreqid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientreqid());
  }

  return total_size;
}
size_t ReplyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.ReplyMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes reply = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reply());

    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

    // required uint64 clientreqid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientreqid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.ReplyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.ReplyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.ReplyMessage)
    MergeFrom(*source);
  }
}

void ReplyMessage::MergeFrom(const ReplyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.ReplyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reply();
      reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
    }
    if (cached_has_bits & 0x00000002u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000004u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000008u) {
      clientreqid_ = from.clientreqid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReplyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.ReplyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMessage::CopyFrom(const ReplyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.ReplyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ReplyMessage::Swap(ReplyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyMessage::InternalSwap(ReplyMessage* other) {
  using std::swap;
  reply_.Swap(&other->reply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(clientreqid_, other->clientreqid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplyMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnloggedRequestMessage::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_UnloggedRequestMessage_default_instance_._instance.get_mutable()->req_ = const_cast< ::specpaxos::UnloggedRequest*>(
      ::specpaxos::UnloggedRequest::internal_default_instance());
}
void UnloggedRequestMessage::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnloggedRequestMessage::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnloggedRequestMessage::UnloggedRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_UnloggedRequestMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.UnloggedRequestMessage)
}
UnloggedRequestMessage::UnloggedRequestMessage(const UnloggedRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::specpaxos::UnloggedRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.UnloggedRequestMessage)
}

void UnloggedRequestMessage::SharedCtor() {
  req_ = NULL;
}

UnloggedRequestMessage::~UnloggedRequestMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.UnloggedRequestMessage)
  SharedDtor();
}

void UnloggedRequestMessage::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
}

void UnloggedRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnloggedRequestMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnloggedRequestMessage& UnloggedRequestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_UnloggedRequestMessage.base);
  return *internal_default_instance();
}


void UnloggedRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.UnloggedRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(req_ != NULL);
    req_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnloggedRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.UnloggedRequestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .specpaxos.UnloggedRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.UnloggedRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.UnloggedRequestMessage)
  return false;
#undef DO_
}

void UnloggedRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.UnloggedRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .specpaxos.UnloggedRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.UnloggedRequestMessage)
}

::google::protobuf::uint8* UnloggedRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.UnloggedRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .specpaxos.UnloggedRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.UnloggedRequestMessage)
  return target;
}

size_t UnloggedRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.UnloggedRequestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .specpaxos.UnloggedRequest req = 1;
  if (has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnloggedRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.UnloggedRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UnloggedRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnloggedRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.UnloggedRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.UnloggedRequestMessage)
    MergeFrom(*source);
  }
}

void UnloggedRequestMessage::MergeFrom(const UnloggedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.UnloggedRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::specpaxos::UnloggedRequest::MergeFrom(from.req());
  }
}

void UnloggedRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.UnloggedRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnloggedRequestMessage::CopyFrom(const UnloggedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.UnloggedRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnloggedRequestMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void UnloggedRequestMessage::Swap(UnloggedRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnloggedRequestMessage::InternalSwap(UnloggedRequestMessage* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnloggedRequestMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnloggedReplyMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnloggedReplyMessage::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnloggedReplyMessage::UnloggedReplyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_UnloggedReplyMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.UnloggedReplyMessage)
}
UnloggedReplyMessage::UnloggedReplyMessage(const UnloggedReplyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reply()) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.UnloggedReplyMessage)
}

void UnloggedReplyMessage::SharedCtor() {
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnloggedReplyMessage::~UnloggedReplyMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.UnloggedReplyMessage)
  SharedDtor();
}

void UnloggedReplyMessage::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnloggedReplyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnloggedReplyMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnloggedReplyMessage& UnloggedReplyMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_UnloggedReplyMessage.base);
  return *internal_default_instance();
}


void UnloggedReplyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.UnloggedReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reply_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnloggedReplyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.UnloggedReplyMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes reply = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.UnloggedReplyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.UnloggedReplyMessage)
  return false;
#undef DO_
}

void UnloggedReplyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.UnloggedReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes reply = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->reply(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.UnloggedReplyMessage)
}

::google::protobuf::uint8* UnloggedReplyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.UnloggedReplyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes reply = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->reply(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.UnloggedReplyMessage)
  return target;
}

size_t UnloggedReplyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.UnloggedReplyMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes reply = 1;
  if (has_reply()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reply());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnloggedReplyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.UnloggedReplyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UnloggedReplyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnloggedReplyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.UnloggedReplyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.UnloggedReplyMessage)
    MergeFrom(*source);
  }
}

void UnloggedReplyMessage::MergeFrom(const UnloggedReplyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.UnloggedReplyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reply()) {
    set_has_reply();
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
}

void UnloggedReplyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.UnloggedReplyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnloggedReplyMessage::CopyFrom(const UnloggedReplyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.UnloggedReplyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnloggedReplyMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UnloggedReplyMessage::Swap(UnloggedReplyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnloggedReplyMessage::InternalSwap(UnloggedReplyMessage* other) {
  using std::swap;
  reply_.Swap(&other->reply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnloggedReplyMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrepareMessage::InitAsDefaultInstance() {
}
void PrepareMessage::clear_request() {
  request_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareMessage::kViewFieldNumber;
const int PrepareMessage::kOpnumFieldNumber;
const int PrepareMessage::kBatchstartFieldNumber;
const int PrepareMessage::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareMessage::PrepareMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_PrepareMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.PrepareMessage)
}
PrepareMessage::PrepareMessage(const PrepareMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      request_(from.request_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&batchstart_) -
    reinterpret_cast<char*>(&view_)) + sizeof(batchstart_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.PrepareMessage)
}

void PrepareMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batchstart_) -
      reinterpret_cast<char*>(&view_)) + sizeof(batchstart_));
}

PrepareMessage::~PrepareMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.PrepareMessage)
  SharedDtor();
}

void PrepareMessage::SharedDtor() {
}

void PrepareMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareMessage& PrepareMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_PrepareMessage.base);
  return *internal_default_instance();
}


void PrepareMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.PrepareMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&batchstart_) -
        reinterpret_cast<char*>(&view_)) + sizeof(batchstart_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrepareMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.PrepareMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 batchstart = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_batchstart();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batchstart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .specpaxos.Request request = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.PrepareMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.PrepareMessage)
  return false;
#undef DO_
}

void PrepareMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.PrepareMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required uint64 batchstart = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->batchstart(), output);
  }

  // repeated .specpaxos.Request request = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->request_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->request(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.PrepareMessage)
}

::google::protobuf::uint8* PrepareMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.PrepareMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required uint64 batchstart = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->batchstart(), target);
  }

  // repeated .specpaxos.Request request = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->request_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->request(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.PrepareMessage)
  return target;
}

size_t PrepareMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.PrepareMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  if (has_batchstart()) {
    // required uint64 batchstart = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batchstart());
  }

  return total_size;
}
size_t PrepareMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.PrepareMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

    // required uint64 batchstart = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batchstart());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .specpaxos.Request request = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->request_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->request(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.PrepareMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.PrepareMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.PrepareMessage)
    MergeFrom(*source);
  }
}

void PrepareMessage::MergeFrom(const PrepareMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.PrepareMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  request_.MergeFrom(from.request_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      batchstart_ = from.batchstart_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrepareMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.PrepareMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareMessage::CopyFrom(const PrepareMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.PrepareMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->request())) return false;
  return true;
}

void PrepareMessage::Swap(PrepareMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareMessage::InternalSwap(PrepareMessage* other) {
  using std::swap;
  CastToBase(&request_)->InternalSwap(CastToBase(&other->request_));
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(batchstart_, other->batchstart_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrepareOKMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareOKMessage::kViewFieldNumber;
const int PrepareOKMessage::kOpnumFieldNumber;
const int PrepareOKMessage::kReplicaIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareOKMessage::PrepareOKMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_PrepareOKMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.PrepareOKMessage)
}
PrepareOKMessage::PrepareOKMessage(const PrepareOKMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicaidx_) -
    reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.PrepareOKMessage)
}

void PrepareOKMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicaidx_) -
      reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
}

PrepareOKMessage::~PrepareOKMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.PrepareOKMessage)
  SharedDtor();
}

void PrepareOKMessage::SharedDtor() {
}

void PrepareOKMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareOKMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareOKMessage& PrepareOKMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_PrepareOKMessage.base);
  return *internal_default_instance();
}


void PrepareOKMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.PrepareOKMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replicaidx_) -
        reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrepareOKMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.PrepareOKMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 replicaIdx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_replicaidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replicaidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.PrepareOKMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.PrepareOKMessage)
  return false;
#undef DO_
}

void PrepareOKMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.PrepareOKMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required uint32 replicaIdx = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->replicaidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.PrepareOKMessage)
}

::google::protobuf::uint8* PrepareOKMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.PrepareOKMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required uint32 replicaIdx = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->replicaidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.PrepareOKMessage)
  return target;
}

size_t PrepareOKMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.PrepareOKMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  if (has_replicaidx()) {
    // required uint32 replicaIdx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());
  }

  return total_size;
}
size_t PrepareOKMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.PrepareOKMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

    // required uint32 replicaIdx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareOKMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.PrepareOKMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareOKMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareOKMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.PrepareOKMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.PrepareOKMessage)
    MergeFrom(*source);
  }
}

void PrepareOKMessage::MergeFrom(const PrepareOKMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.PrepareOKMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      replicaidx_ = from.replicaidx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrepareOKMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.PrepareOKMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareOKMessage::CopyFrom(const PrepareOKMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.PrepareOKMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareOKMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PrepareOKMessage::Swap(PrepareOKMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareOKMessage::InternalSwap(PrepareOKMessage* other) {
  using std::swap;
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(replicaidx_, other->replicaidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareOKMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitMessage::kViewFieldNumber;
const int CommitMessage::kOpnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitMessage::CommitMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_CommitMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.CommitMessage)
}
CommitMessage::CommitMessage(const CommitMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&opnum_) -
    reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.CommitMessage)
}

void CommitMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opnum_) -
      reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
}

CommitMessage::~CommitMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.CommitMessage)
  SharedDtor();
}

void CommitMessage::SharedDtor() {
}

void CommitMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommitMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitMessage& CommitMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_CommitMessage.base);
  return *internal_default_instance();
}


void CommitMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.CommitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&opnum_) -
        reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommitMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.CommitMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.CommitMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.CommitMessage)
  return false;
#undef DO_
}

void CommitMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.CommitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.CommitMessage)
}

::google::protobuf::uint8* CommitMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.CommitMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.CommitMessage)
  return target;
}

size_t CommitMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.CommitMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t CommitMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.CommitMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.CommitMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.CommitMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.CommitMessage)
    MergeFrom(*source);
  }
}

void CommitMessage::MergeFrom(const CommitMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.CommitMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      opnum_ = from.opnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CommitMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.CommitMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitMessage::CopyFrom(const CommitMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.CommitMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CommitMessage::Swap(CommitMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitMessage::InternalSwap(CommitMessage* other) {
  using std::swap;
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommitMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestStateTransferMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestStateTransferMessage::kViewFieldNumber;
const int RequestStateTransferMessage::kOpnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestStateTransferMessage::RequestStateTransferMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RequestStateTransferMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.RequestStateTransferMessage)
}
RequestStateTransferMessage::RequestStateTransferMessage(const RequestStateTransferMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&opnum_) -
    reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.RequestStateTransferMessage)
}

void RequestStateTransferMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opnum_) -
      reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
}

RequestStateTransferMessage::~RequestStateTransferMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.RequestStateTransferMessage)
  SharedDtor();
}

void RequestStateTransferMessage::SharedDtor() {
}

void RequestStateTransferMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestStateTransferMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestStateTransferMessage& RequestStateTransferMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_RequestStateTransferMessage.base);
  return *internal_default_instance();
}


void RequestStateTransferMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.RequestStateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&opnum_) -
        reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RequestStateTransferMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.RequestStateTransferMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.RequestStateTransferMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.RequestStateTransferMessage)
  return false;
#undef DO_
}

void RequestStateTransferMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.RequestStateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.RequestStateTransferMessage)
}

::google::protobuf::uint8* RequestStateTransferMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.RequestStateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.RequestStateTransferMessage)
  return target;
}

size_t RequestStateTransferMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.RequestStateTransferMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t RequestStateTransferMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.RequestStateTransferMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestStateTransferMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.RequestStateTransferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestStateTransferMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestStateTransferMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.RequestStateTransferMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.RequestStateTransferMessage)
    MergeFrom(*source);
  }
}

void RequestStateTransferMessage::MergeFrom(const RequestStateTransferMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.RequestStateTransferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      opnum_ = from.opnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RequestStateTransferMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.RequestStateTransferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestStateTransferMessage::CopyFrom(const RequestStateTransferMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.RequestStateTransferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestStateTransferMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RequestStateTransferMessage::Swap(RequestStateTransferMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestStateTransferMessage::InternalSwap(RequestStateTransferMessage* other) {
  using std::swap;
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestStateTransferMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateTransferMessage_LogEntry::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_StateTransferMessage_LogEntry_default_instance_._instance.get_mutable()->request_ = const_cast< ::specpaxos::Request*>(
      ::specpaxos::Request::internal_default_instance());
}
void StateTransferMessage_LogEntry::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateTransferMessage_LogEntry::kViewFieldNumber;
const int StateTransferMessage_LogEntry::kOpnumFieldNumber;
const int StateTransferMessage_LogEntry::kRequestFieldNumber;
const int StateTransferMessage_LogEntry::kStateFieldNumber;
const int StateTransferMessage_LogEntry::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateTransferMessage_LogEntry::StateTransferMessage_LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StateTransferMessage_LogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.StateTransferMessage.LogEntry)
}
StateTransferMessage_LogEntry::StateTransferMessage_LogEntry(const StateTransferMessage_LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_request()) {
    request_ = new ::specpaxos::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&view_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.StateTransferMessage.LogEntry)
}

void StateTransferMessage_LogEntry::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&request_)) + sizeof(state_));
}

StateTransferMessage_LogEntry::~StateTransferMessage_LogEntry() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  SharedDtor();
}

void StateTransferMessage_LogEntry::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void StateTransferMessage_LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateTransferMessage_LogEntry::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateTransferMessage_LogEntry& StateTransferMessage_LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_StateTransferMessage_LogEntry.base);
  return *internal_default_instance();
}


void StateTransferMessage_LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&view_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StateTransferMessage_LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .specpaxos.Request request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  return false;
#undef DO_
}

void StateTransferMessage_LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.StateTransferMessage.LogEntry)
}

::google::protobuf::uint8* StateTransferMessage_LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  return target;
}

size_t StateTransferMessage_LogEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  size_t total_size = 0;

  if (has_request()) {
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t StateTransferMessage_LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);

    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes hash = 5;
  if (has_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // optional uint32 state = 4;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateTransferMessage_LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const StateTransferMessage_LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateTransferMessage_LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.StateTransferMessage.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.StateTransferMessage.LogEntry)
    MergeFrom(*source);
  }
}

void StateTransferMessage_LogEntry::MergeFrom(const StateTransferMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::specpaxos::Request::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000008u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StateTransferMessage_LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateTransferMessage_LogEntry::CopyFrom(const StateTransferMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.StateTransferMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateTransferMessage_LogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  return true;
}

void StateTransferMessage_LogEntry::Swap(StateTransferMessage_LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateTransferMessage_LogEntry::InternalSwap(StateTransferMessage_LogEntry* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateTransferMessage_LogEntry::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateTransferMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateTransferMessage::kViewFieldNumber;
const int StateTransferMessage::kOpnumFieldNumber;
const int StateTransferMessage::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateTransferMessage::StateTransferMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StateTransferMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.StateTransferMessage)
}
StateTransferMessage::StateTransferMessage(const StateTransferMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&opnum_) -
    reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.StateTransferMessage)
}

void StateTransferMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opnum_) -
      reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
}

StateTransferMessage::~StateTransferMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.StateTransferMessage)
  SharedDtor();
}

void StateTransferMessage::SharedDtor() {
}

void StateTransferMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateTransferMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateTransferMessage& StateTransferMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_StateTransferMessage.base);
  return *internal_default_instance();
}


void StateTransferMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.StateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&opnum_) -
        reinterpret_cast<char*>(&view_)) + sizeof(opnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StateTransferMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.StateTransferMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .specpaxos.vr.proto.StateTransferMessage.LogEntry entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.StateTransferMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.StateTransferMessage)
  return false;
#undef DO_
}

void StateTransferMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.StateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // repeated .specpaxos.vr.proto.StateTransferMessage.LogEntry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.StateTransferMessage)
}

::google::protobuf::uint8* StateTransferMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.StateTransferMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // repeated .specpaxos.vr.proto.StateTransferMessage.LogEntry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.StateTransferMessage)
  return target;
}

size_t StateTransferMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.StateTransferMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t StateTransferMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.StateTransferMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .specpaxos.vr.proto.StateTransferMessage.LogEntry entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateTransferMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.StateTransferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StateTransferMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateTransferMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.StateTransferMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.StateTransferMessage)
    MergeFrom(*source);
  }
}

void StateTransferMessage::MergeFrom(const StateTransferMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.StateTransferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      opnum_ = from.opnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StateTransferMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.StateTransferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateTransferMessage::CopyFrom(const StateTransferMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.StateTransferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateTransferMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void StateTransferMessage::Swap(StateTransferMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateTransferMessage::InternalSwap(StateTransferMessage* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateTransferMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartViewChangeMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartViewChangeMessage::kViewFieldNumber;
const int StartViewChangeMessage::kReplicaIdxFieldNumber;
const int StartViewChangeMessage::kLastCommittedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartViewChangeMessage::StartViewChangeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewChangeMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.StartViewChangeMessage)
}
StartViewChangeMessage::StartViewChangeMessage(const StartViewChangeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicaidx_) -
    reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.StartViewChangeMessage)
}

void StartViewChangeMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicaidx_) -
      reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
}

StartViewChangeMessage::~StartViewChangeMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.StartViewChangeMessage)
  SharedDtor();
}

void StartViewChangeMessage::SharedDtor() {
}

void StartViewChangeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StartViewChangeMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartViewChangeMessage& StartViewChangeMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewChangeMessage.base);
  return *internal_default_instance();
}


void StartViewChangeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.StartViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replicaidx_) -
        reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartViewChangeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.StartViewChangeMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 replicaIdx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_replicaidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replicaidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastCommitted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lastcommitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastcommitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.StartViewChangeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.StartViewChangeMessage)
  return false;
#undef DO_
}

void StartViewChangeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.StartViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint32 replicaIdx = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->replicaidx(), output);
  }

  // required uint64 lastCommitted = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lastcommitted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.StartViewChangeMessage)
}

::google::protobuf::uint8* StartViewChangeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.StartViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint32 replicaIdx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->replicaidx(), target);
  }

  // required uint64 lastCommitted = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lastcommitted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.StartViewChangeMessage)
  return target;
}

size_t StartViewChangeMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.StartViewChangeMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_lastcommitted()) {
    // required uint64 lastCommitted = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());
  }

  if (has_replicaidx()) {
    // required uint32 replicaIdx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());
  }

  return total_size;
}
size_t StartViewChangeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.StartViewChangeMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 lastCommitted = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());

    // required uint32 replicaIdx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartViewChangeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.StartViewChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StartViewChangeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartViewChangeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.StartViewChangeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.StartViewChangeMessage)
    MergeFrom(*source);
  }
}

void StartViewChangeMessage::MergeFrom(const StartViewChangeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.StartViewChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      lastcommitted_ = from.lastcommitted_;
    }
    if (cached_has_bits & 0x00000004u) {
      replicaidx_ = from.replicaidx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartViewChangeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.StartViewChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartViewChangeMessage::CopyFrom(const StartViewChangeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.StartViewChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartViewChangeMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void StartViewChangeMessage::Swap(StartViewChangeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartViewChangeMessage::InternalSwap(StartViewChangeMessage* other) {
  using std::swap;
  swap(view_, other->view_);
  swap(lastcommitted_, other->lastcommitted_);
  swap(replicaidx_, other->replicaidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StartViewChangeMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoViewChangeMessage_LogEntry::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_DoViewChangeMessage_LogEntry_default_instance_._instance.get_mutable()->request_ = const_cast< ::specpaxos::Request*>(
      ::specpaxos::Request::internal_default_instance());
}
void DoViewChangeMessage_LogEntry::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoViewChangeMessage_LogEntry::kViewFieldNumber;
const int DoViewChangeMessage_LogEntry::kOpnumFieldNumber;
const int DoViewChangeMessage_LogEntry::kRequestFieldNumber;
const int DoViewChangeMessage_LogEntry::kStateFieldNumber;
const int DoViewChangeMessage_LogEntry::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoViewChangeMessage_LogEntry::DoViewChangeMessage_LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_DoViewChangeMessage_LogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
}
DoViewChangeMessage_LogEntry::DoViewChangeMessage_LogEntry(const DoViewChangeMessage_LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_request()) {
    request_ = new ::specpaxos::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&view_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
}

void DoViewChangeMessage_LogEntry::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&request_)) + sizeof(state_));
}

DoViewChangeMessage_LogEntry::~DoViewChangeMessage_LogEntry() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  SharedDtor();
}

void DoViewChangeMessage_LogEntry::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void DoViewChangeMessage_LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoViewChangeMessage_LogEntry::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoViewChangeMessage_LogEntry& DoViewChangeMessage_LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_DoViewChangeMessage_LogEntry.base);
  return *internal_default_instance();
}


void DoViewChangeMessage_LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&view_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoViewChangeMessage_LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .specpaxos.Request request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  return false;
#undef DO_
}

void DoViewChangeMessage_LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
}

::google::protobuf::uint8* DoViewChangeMessage_LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  return target;
}

size_t DoViewChangeMessage_LogEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  size_t total_size = 0;

  if (has_request()) {
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t DoViewChangeMessage_LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);

    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes hash = 5;
  if (has_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // optional uint32 state = 4;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoViewChangeMessage_LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const DoViewChangeMessage_LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoViewChangeMessage_LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
    MergeFrom(*source);
  }
}

void DoViewChangeMessage_LogEntry::MergeFrom(const DoViewChangeMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::specpaxos::Request::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000008u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DoViewChangeMessage_LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoViewChangeMessage_LogEntry::CopyFrom(const DoViewChangeMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.DoViewChangeMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoViewChangeMessage_LogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  return true;
}

void DoViewChangeMessage_LogEntry::Swap(DoViewChangeMessage_LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoViewChangeMessage_LogEntry::InternalSwap(DoViewChangeMessage_LogEntry* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoViewChangeMessage_LogEntry::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoViewChangeMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoViewChangeMessage::kViewFieldNumber;
const int DoViewChangeMessage::kLastNormalViewFieldNumber;
const int DoViewChangeMessage::kLastOpFieldNumber;
const int DoViewChangeMessage::kLastCommittedFieldNumber;
const int DoViewChangeMessage::kEntriesFieldNumber;
const int DoViewChangeMessage::kReplicaIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoViewChangeMessage::DoViewChangeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_DoViewChangeMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.DoViewChangeMessage)
}
DoViewChangeMessage::DoViewChangeMessage(const DoViewChangeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicaidx_) -
    reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.DoViewChangeMessage)
}

void DoViewChangeMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicaidx_) -
      reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
}

DoViewChangeMessage::~DoViewChangeMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.DoViewChangeMessage)
  SharedDtor();
}

void DoViewChangeMessage::SharedDtor() {
}

void DoViewChangeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoViewChangeMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoViewChangeMessage& DoViewChangeMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_DoViewChangeMessage.base);
  return *internal_default_instance();
}


void DoViewChangeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.DoViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replicaidx_) -
        reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoViewChangeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.DoViewChangeMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastNormalView = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lastnormalview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastnormalview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastOp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lastop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastCommitted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lastcommitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastcommitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .specpaxos.vr.proto.DoViewChangeMessage.LogEntry entries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 replicaIdx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_replicaidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replicaidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.DoViewChangeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.DoViewChangeMessage)
  return false;
#undef DO_
}

void DoViewChangeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.DoViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 lastNormalView = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lastnormalview(), output);
  }

  // required uint64 lastOp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lastop(), output);
  }

  // required uint64 lastCommitted = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->lastcommitted(), output);
  }

  // repeated .specpaxos.vr.proto.DoViewChangeMessage.LogEntry entries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->entries(static_cast<int>(i)),
      output);
  }

  // required uint32 replicaIdx = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->replicaidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.DoViewChangeMessage)
}

::google::protobuf::uint8* DoViewChangeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.DoViewChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 lastNormalView = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lastnormalview(), target);
  }

  // required uint64 lastOp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lastop(), target);
  }

  // required uint64 lastCommitted = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->lastcommitted(), target);
  }

  // repeated .specpaxos.vr.proto.DoViewChangeMessage.LogEntry entries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->entries(static_cast<int>(i)), deterministic, target);
  }

  // required uint32 replicaIdx = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->replicaidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.DoViewChangeMessage)
  return target;
}

size_t DoViewChangeMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.DoViewChangeMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_lastnormalview()) {
    // required uint64 lastNormalView = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastnormalview());
  }

  if (has_lastop()) {
    // required uint64 lastOp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastop());
  }

  if (has_lastcommitted()) {
    // required uint64 lastCommitted = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());
  }

  if (has_replicaidx()) {
    // required uint32 replicaIdx = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());
  }

  return total_size;
}
size_t DoViewChangeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.DoViewChangeMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 lastNormalView = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastnormalview());

    // required uint64 lastOp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastop());

    // required uint64 lastCommitted = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());

    // required uint32 replicaIdx = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .specpaxos.vr.proto.DoViewChangeMessage.LogEntry entries = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoViewChangeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.DoViewChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DoViewChangeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoViewChangeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.DoViewChangeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.DoViewChangeMessage)
    MergeFrom(*source);
  }
}

void DoViewChangeMessage::MergeFrom(const DoViewChangeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.DoViewChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      lastnormalview_ = from.lastnormalview_;
    }
    if (cached_has_bits & 0x00000004u) {
      lastop_ = from.lastop_;
    }
    if (cached_has_bits & 0x00000008u) {
      lastcommitted_ = from.lastcommitted_;
    }
    if (cached_has_bits & 0x00000010u) {
      replicaidx_ = from.replicaidx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DoViewChangeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.DoViewChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoViewChangeMessage::CopyFrom(const DoViewChangeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.DoViewChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoViewChangeMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void DoViewChangeMessage::Swap(DoViewChangeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoViewChangeMessage::InternalSwap(DoViewChangeMessage* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(view_, other->view_);
  swap(lastnormalview_, other->lastnormalview_);
  swap(lastop_, other->lastop_);
  swap(lastcommitted_, other->lastcommitted_);
  swap(replicaidx_, other->replicaidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoViewChangeMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartViewMessage_LogEntry::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_StartViewMessage_LogEntry_default_instance_._instance.get_mutable()->request_ = const_cast< ::specpaxos::Request*>(
      ::specpaxos::Request::internal_default_instance());
}
void StartViewMessage_LogEntry::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartViewMessage_LogEntry::kViewFieldNumber;
const int StartViewMessage_LogEntry::kOpnumFieldNumber;
const int StartViewMessage_LogEntry::kRequestFieldNumber;
const int StartViewMessage_LogEntry::kStateFieldNumber;
const int StartViewMessage_LogEntry::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartViewMessage_LogEntry::StartViewMessage_LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewMessage_LogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.StartViewMessage.LogEntry)
}
StartViewMessage_LogEntry::StartViewMessage_LogEntry(const StartViewMessage_LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_request()) {
    request_ = new ::specpaxos::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&view_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.StartViewMessage.LogEntry)
}

void StartViewMessage_LogEntry::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&request_)) + sizeof(state_));
}

StartViewMessage_LogEntry::~StartViewMessage_LogEntry() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.StartViewMessage.LogEntry)
  SharedDtor();
}

void StartViewMessage_LogEntry::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void StartViewMessage_LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StartViewMessage_LogEntry::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartViewMessage_LogEntry& StartViewMessage_LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewMessage_LogEntry.base);
  return *internal_default_instance();
}


void StartViewMessage_LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&view_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartViewMessage_LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .specpaxos.Request request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.StartViewMessage.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.StartViewMessage.LogEntry)
  return false;
#undef DO_
}

void StartViewMessage_LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.StartViewMessage.LogEntry)
}

::google::protobuf::uint8* StartViewMessage_LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.StartViewMessage.LogEntry)
  return target;
}

size_t StartViewMessage_LogEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  size_t total_size = 0;

  if (has_request()) {
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t StartViewMessage_LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);

    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes hash = 5;
  if (has_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // optional uint32 state = 4;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartViewMessage_LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const StartViewMessage_LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartViewMessage_LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.StartViewMessage.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.StartViewMessage.LogEntry)
    MergeFrom(*source);
  }
}

void StartViewMessage_LogEntry::MergeFrom(const StartViewMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::specpaxos::Request::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000008u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartViewMessage_LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartViewMessage_LogEntry::CopyFrom(const StartViewMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.StartViewMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartViewMessage_LogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  return true;
}

void StartViewMessage_LogEntry::Swap(StartViewMessage_LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartViewMessage_LogEntry::InternalSwap(StartViewMessage_LogEntry* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StartViewMessage_LogEntry::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartViewMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartViewMessage::kViewFieldNumber;
const int StartViewMessage::kLastOpFieldNumber;
const int StartViewMessage::kLastCommittedFieldNumber;
const int StartViewMessage::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartViewMessage::StartViewMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.StartViewMessage)
}
StartViewMessage::StartViewMessage(const StartViewMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastcommitted_) -
    reinterpret_cast<char*>(&view_)) + sizeof(lastcommitted_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.StartViewMessage)
}

void StartViewMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastcommitted_) -
      reinterpret_cast<char*>(&view_)) + sizeof(lastcommitted_));
}

StartViewMessage::~StartViewMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.StartViewMessage)
  SharedDtor();
}

void StartViewMessage::SharedDtor() {
}

void StartViewMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StartViewMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartViewMessage& StartViewMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_StartViewMessage.base);
  return *internal_default_instance();
}


void StartViewMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.StartViewMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lastcommitted_) -
        reinterpret_cast<char*>(&view_)) + sizeof(lastcommitted_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StartViewMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.StartViewMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastOp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lastop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 lastCommitted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lastcommitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastcommitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .specpaxos.vr.proto.StartViewMessage.LogEntry entries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.StartViewMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.StartViewMessage)
  return false;
#undef DO_
}

void StartViewMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.StartViewMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 lastOp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lastop(), output);
  }

  // required uint64 lastCommitted = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lastcommitted(), output);
  }

  // repeated .specpaxos.vr.proto.StartViewMessage.LogEntry entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.StartViewMessage)
}

::google::protobuf::uint8* StartViewMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.StartViewMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 lastOp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lastop(), target);
  }

  // required uint64 lastCommitted = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lastcommitted(), target);
  }

  // repeated .specpaxos.vr.proto.StartViewMessage.LogEntry entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.StartViewMessage)
  return target;
}

size_t StartViewMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.StartViewMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_lastop()) {
    // required uint64 lastOp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastop());
  }

  if (has_lastcommitted()) {
    // required uint64 lastCommitted = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());
  }

  return total_size;
}
size_t StartViewMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.StartViewMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 lastOp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastop());

    // required uint64 lastCommitted = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastcommitted());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .specpaxos.vr.proto.StartViewMessage.LogEntry entries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartViewMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.StartViewMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StartViewMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartViewMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.StartViewMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.StartViewMessage)
    MergeFrom(*source);
  }
}

void StartViewMessage::MergeFrom(const StartViewMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.StartViewMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      lastop_ = from.lastop_;
    }
    if (cached_has_bits & 0x00000004u) {
      lastcommitted_ = from.lastcommitted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StartViewMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.StartViewMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartViewMessage::CopyFrom(const StartViewMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.StartViewMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartViewMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void StartViewMessage::Swap(StartViewMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartViewMessage::InternalSwap(StartViewMessage* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(view_, other->view_);
  swap(lastop_, other->lastop_);
  swap(lastcommitted_, other->lastcommitted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StartViewMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoveryMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoveryMessage::kReplicaIdxFieldNumber;
const int RecoveryMessage::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoveryMessage::RecoveryMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.RecoveryMessage)
}
RecoveryMessage::RecoveryMessage(const RecoveryMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicaidx_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(replicaidx_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.RecoveryMessage)
}

void RecoveryMessage::SharedCtor() {
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicaidx_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(replicaidx_));
}

RecoveryMessage::~RecoveryMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.RecoveryMessage)
  SharedDtor();
}

void RecoveryMessage::SharedDtor() {
}

void RecoveryMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoveryMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoveryMessage& RecoveryMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryMessage.base);
  return *internal_default_instance();
}


void RecoveryMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.RecoveryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&nonce_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replicaidx_) -
        reinterpret_cast<char*>(&nonce_)) + sizeof(replicaidx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoveryMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.RecoveryMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 replicaIdx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_replicaidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replicaidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nonce();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.RecoveryMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.RecoveryMessage)
  return false;
#undef DO_
}

void RecoveryMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.RecoveryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 replicaIdx = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->replicaidx(), output);
  }

  // required uint64 nonce = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nonce(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.RecoveryMessage)
}

::google::protobuf::uint8* RecoveryMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.RecoveryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 replicaIdx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->replicaidx(), target);
  }

  // required uint64 nonce = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nonce(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.RecoveryMessage)
  return target;
}

size_t RecoveryMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.RecoveryMessage)
  size_t total_size = 0;

  if (has_nonce()) {
    // required uint64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  if (has_replicaidx()) {
    // required uint32 replicaIdx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());
  }

  return total_size;
}
size_t RecoveryMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.RecoveryMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());

    // required uint32 replicaIdx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoveryMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.RecoveryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoveryMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoveryMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.RecoveryMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.RecoveryMessage)
    MergeFrom(*source);
  }
}

void RecoveryMessage::MergeFrom(const RecoveryMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.RecoveryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nonce_ = from.nonce_;
    }
    if (cached_has_bits & 0x00000002u) {
      replicaidx_ = from.replicaidx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoveryMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.RecoveryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoveryMessage::CopyFrom(const RecoveryMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.RecoveryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoveryMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RecoveryMessage::Swap(RecoveryMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoveryMessage::InternalSwap(RecoveryMessage* other) {
  using std::swap;
  swap(nonce_, other->nonce_);
  swap(replicaidx_, other->replicaidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoveryMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoveryResponseMessage_LogEntry::InitAsDefaultInstance() {
  ::specpaxos::vr::proto::_RecoveryResponseMessage_LogEntry_default_instance_._instance.get_mutable()->request_ = const_cast< ::specpaxos::Request*>(
      ::specpaxos::Request::internal_default_instance());
}
void RecoveryResponseMessage_LogEntry::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoveryResponseMessage_LogEntry::kViewFieldNumber;
const int RecoveryResponseMessage_LogEntry::kOpnumFieldNumber;
const int RecoveryResponseMessage_LogEntry::kRequestFieldNumber;
const int RecoveryResponseMessage_LogEntry::kStateFieldNumber;
const int RecoveryResponseMessage_LogEntry::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoveryResponseMessage_LogEntry::RecoveryResponseMessage_LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryResponseMessage_LogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
}
RecoveryResponseMessage_LogEntry::RecoveryResponseMessage_LogEntry(const RecoveryResponseMessage_LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_request()) {
    request_ = new ::specpaxos::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&view_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
}

void RecoveryResponseMessage_LogEntry::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&request_)) + sizeof(state_));
}

RecoveryResponseMessage_LogEntry::~RecoveryResponseMessage_LogEntry() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  SharedDtor();
}

void RecoveryResponseMessage_LogEntry::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void RecoveryResponseMessage_LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoveryResponseMessage_LogEntry::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoveryResponseMessage_LogEntry& RecoveryResponseMessage_LogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryResponseMessage_LogEntry.base);
  return *internal_default_instance();
}


void RecoveryResponseMessage_LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&view_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoveryResponseMessage_LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 opnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .specpaxos.Request request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  return false;
#undef DO_
}

void RecoveryResponseMessage_LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->opnum(), output);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
}

::google::protobuf::uint8* RecoveryResponseMessage_LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 opnum = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->opnum(), target);
  }

  // required .specpaxos.Request request = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // optional uint32 state = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional bytes hash = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  return target;
}

size_t RecoveryResponseMessage_LogEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  size_t total_size = 0;

  if (has_request()) {
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_opnum()) {
    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());
  }

  return total_size;
}
size_t RecoveryResponseMessage_LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .specpaxos.Request request = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);

    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 opnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes hash = 5;
  if (has_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // optional uint32 state = 4;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoveryResponseMessage_LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoveryResponseMessage_LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoveryResponseMessage_LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
    MergeFrom(*source);
  }
}

void RecoveryResponseMessage_LogEntry::MergeFrom(const RecoveryResponseMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::specpaxos::Request::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000008u) {
      opnum_ = from.opnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoveryResponseMessage_LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoveryResponseMessage_LogEntry::CopyFrom(const RecoveryResponseMessage_LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.RecoveryResponseMessage.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoveryResponseMessage_LogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  return true;
}

void RecoveryResponseMessage_LogEntry::Swap(RecoveryResponseMessage_LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoveryResponseMessage_LogEntry::InternalSwap(RecoveryResponseMessage_LogEntry* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(view_, other->view_);
  swap(opnum_, other->opnum_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoveryResponseMessage_LogEntry::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoveryResponseMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoveryResponseMessage::kViewFieldNumber;
const int RecoveryResponseMessage::kNonceFieldNumber;
const int RecoveryResponseMessage::kEntriesFieldNumber;
const int RecoveryResponseMessage::kLastOpFieldNumber;
const int RecoveryResponseMessage::kLastCommittedFieldNumber;
const int RecoveryResponseMessage::kReplicaIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoveryResponseMessage::RecoveryResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryResponseMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:specpaxos.vr.proto.RecoveryResponseMessage)
}
RecoveryResponseMessage::RecoveryResponseMessage(const RecoveryResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&replicaidx_) -
    reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  // @@protoc_insertion_point(copy_constructor:specpaxos.vr.proto.RecoveryResponseMessage)
}

void RecoveryResponseMessage::SharedCtor() {
  ::memset(&view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replicaidx_) -
      reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
}

RecoveryResponseMessage::~RecoveryResponseMessage() {
  // @@protoc_insertion_point(destructor:specpaxos.vr.proto.RecoveryResponseMessage)
  SharedDtor();
}

void RecoveryResponseMessage::SharedDtor() {
}

void RecoveryResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoveryResponseMessage::descriptor() {
  ::protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoveryResponseMessage& RecoveryResponseMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vr_2fvr_2dproto_2eproto::scc_info_RecoveryResponseMessage.base);
  return *internal_default_instance();
}


void RecoveryResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:specpaxos.vr.proto.RecoveryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replicaidx_) -
        reinterpret_cast<char*>(&view_)) + sizeof(replicaidx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoveryResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:specpaxos.vr.proto.RecoveryResponseMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 view = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nonce();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .specpaxos.vr.proto.RecoveryResponseMessage.LogEntry entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 lastOp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lastop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 lastCommitted = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lastcommitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastcommitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 replicaIdx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_replicaidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replicaidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:specpaxos.vr.proto.RecoveryResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:specpaxos.vr.proto.RecoveryResponseMessage)
  return false;
#undef DO_
}

void RecoveryResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:specpaxos.vr.proto.RecoveryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->view(), output);
  }

  // required uint64 nonce = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nonce(), output);
  }

  // repeated .specpaxos.vr.proto.RecoveryResponseMessage.LogEntry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->entries(static_cast<int>(i)),
      output);
  }

  // optional uint64 lastOp = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->lastop(), output);
  }

  // optional uint64 lastCommitted = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lastcommitted(), output);
  }

  // required uint32 replicaIdx = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->replicaidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:specpaxos.vr.proto.RecoveryResponseMessage)
}

::google::protobuf::uint8* RecoveryResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:specpaxos.vr.proto.RecoveryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 view = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->view(), target);
  }

  // required uint64 nonce = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nonce(), target);
  }

  // repeated .specpaxos.vr.proto.RecoveryResponseMessage.LogEntry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  // optional uint64 lastOp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->lastop(), target);
  }

  // optional uint64 lastCommitted = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lastcommitted(), target);
  }

  // required uint32 replicaIdx = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->replicaidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:specpaxos.vr.proto.RecoveryResponseMessage)
  return target;
}

size_t RecoveryResponseMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:specpaxos.vr.proto.RecoveryResponseMessage)
  size_t total_size = 0;

  if (has_view()) {
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());
  }

  if (has_nonce()) {
    // required uint64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  if (has_replicaidx()) {
    // required uint32 replicaIdx = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());
  }

  return total_size;
}
size_t RecoveryResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:specpaxos.vr.proto.RecoveryResponseMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000013) ^ 0x00000013) == 0) {  // All required fields are present.
    // required uint64 view = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->view());

    // required uint64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());

    // required uint32 replicaIdx = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replicaidx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .specpaxos.vr.proto.RecoveryResponseMessage.LogEntry entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional uint64 lastOp = 4;
    if (has_lastop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lastop());
    }

    // optional uint64 lastCommitted = 5;
    if (has_lastcommitted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lastcommitted());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoveryResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:specpaxos.vr.proto.RecoveryResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoveryResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoveryResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:specpaxos.vr.proto.RecoveryResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:specpaxos.vr.proto.RecoveryResponseMessage)
    MergeFrom(*source);
  }
}

void RecoveryResponseMessage::MergeFrom(const RecoveryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:specpaxos.vr.proto.RecoveryResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000002u) {
      nonce_ = from.nonce_;
    }
    if (cached_has_bits & 0x00000004u) {
      lastop_ = from.lastop_;
    }
    if (cached_has_bits & 0x00000008u) {
      lastcommitted_ = from.lastcommitted_;
    }
    if (cached_has_bits & 0x00000010u) {
      replicaidx_ = from.replicaidx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoveryResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:specpaxos.vr.proto.RecoveryResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoveryResponseMessage::CopyFrom(const RecoveryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:specpaxos.vr.proto.RecoveryResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoveryResponseMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000013) != 0x00000013) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void RecoveryResponseMessage::Swap(RecoveryResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoveryResponseMessage::InternalSwap(RecoveryResponseMessage* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(view_, other->view_);
  swap(nonce_, other->nonce_);
  swap(lastop_, other->lastop_);
  swap(lastcommitted_, other->lastcommitted_);
  swap(replicaidx_, other->replicaidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoveryResponseMessage::GetMetadata() const {
  protobuf_vr_2fvr_2dproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vr_2fvr_2dproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace vr
}  // namespace specpaxos
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::RequestMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::RequestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::RequestMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::ReplyMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::ReplyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::ReplyMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::UnloggedRequestMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::UnloggedRequestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::UnloggedRequestMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::UnloggedReplyMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::UnloggedReplyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::UnloggedReplyMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::PrepareMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::PrepareMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::PrepareMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::PrepareOKMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::PrepareOKMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::PrepareOKMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::CommitMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::CommitMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::CommitMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::RequestStateTransferMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::RequestStateTransferMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::RequestStateTransferMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::StateTransferMessage_LogEntry* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::StateTransferMessage_LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::StateTransferMessage_LogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::StateTransferMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::StateTransferMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::StateTransferMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::StartViewChangeMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::StartViewChangeMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::StartViewChangeMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::DoViewChangeMessage_LogEntry* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::DoViewChangeMessage_LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::DoViewChangeMessage_LogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::DoViewChangeMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::DoViewChangeMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::DoViewChangeMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::StartViewMessage_LogEntry* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::StartViewMessage_LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::StartViewMessage_LogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::StartViewMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::StartViewMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::StartViewMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::RecoveryMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::RecoveryMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::RecoveryMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::RecoveryResponseMessage_LogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::specpaxos::vr::proto::RecoveryResponseMessage* Arena::CreateMaybeMessage< ::specpaxos::vr::proto::RecoveryResponseMessage >(Arena* arena) {
  return Arena::CreateInternal< ::specpaxos::vr::proto::RecoveryResponseMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)