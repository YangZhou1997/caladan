// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/request.proto

#ifndef PROTOBUF_INCLUDED_common_2frequest_2eproto
#define PROTOBUF_INCLUDED_common_2frequest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2frequest_2eproto 

namespace protobuf_common_2frequest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2frequest_2eproto
namespace specpaxos {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class UnloggedRequest;
class UnloggedRequestDefaultTypeInternal;
extern UnloggedRequestDefaultTypeInternal _UnloggedRequest_default_instance_;
}  // namespace specpaxos
namespace google {
namespace protobuf {
template<> ::specpaxos::Request* Arena::CreateMaybeMessage<::specpaxos::Request>(Arena*);
template<> ::specpaxos::UnloggedRequest* Arena::CreateMaybeMessage<::specpaxos::UnloggedRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace specpaxos {

// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:specpaxos.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes op = 1;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 1;
  const ::std::string& op() const;
  void set_op(const ::std::string& value);
  #if LANG_CXX11
  void set_op(::std::string&& value);
  #endif
  void set_op(const char* value);
  void set_op(const void* value, size_t size);
  ::std::string* mutable_op();
  ::std::string* release_op();
  void set_allocated_op(::std::string* op);

  // required uint64 clientid = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientidFieldNumber = 2;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // required uint64 clientreqid = 3;
  bool has_clientreqid() const;
  void clear_clientreqid();
  static const int kClientreqidFieldNumber = 3;
  ::google::protobuf::uint64 clientreqid() const;
  void set_clientreqid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:specpaxos.Request)
 private:
  void set_has_op();
  void clear_has_op();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_clientreqid();
  void clear_has_clientreqid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr op_;
  ::google::protobuf::uint64 clientid_;
  ::google::protobuf::uint64 clientreqid_;
  friend struct ::protobuf_common_2frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnloggedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:specpaxos.UnloggedRequest) */ {
 public:
  UnloggedRequest();
  virtual ~UnloggedRequest();

  UnloggedRequest(const UnloggedRequest& from);

  inline UnloggedRequest& operator=(const UnloggedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnloggedRequest(UnloggedRequest&& from) noexcept
    : UnloggedRequest() {
    *this = ::std::move(from);
  }

  inline UnloggedRequest& operator=(UnloggedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnloggedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnloggedRequest* internal_default_instance() {
    return reinterpret_cast<const UnloggedRequest*>(
               &_UnloggedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UnloggedRequest* other);
  friend void swap(UnloggedRequest& a, UnloggedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnloggedRequest* New() const final {
    return CreateMaybeMessage<UnloggedRequest>(NULL);
  }

  UnloggedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnloggedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnloggedRequest& from);
  void MergeFrom(const UnloggedRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnloggedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes op = 1;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 1;
  const ::std::string& op() const;
  void set_op(const ::std::string& value);
  #if LANG_CXX11
  void set_op(::std::string&& value);
  #endif
  void set_op(const char* value);
  void set_op(const void* value, size_t size);
  ::std::string* mutable_op();
  ::std::string* release_op();
  void set_allocated_op(::std::string* op);

  // required uint64 clientid = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientidFieldNumber = 2;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // required uint64 clientreqid = 3;
  bool has_clientreqid() const;
  void clear_clientreqid();
  static const int kClientreqidFieldNumber = 3;
  ::google::protobuf::uint64 clientreqid() const;
  void set_clientreqid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:specpaxos.UnloggedRequest)
 private:
  void set_has_op();
  void clear_has_op();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_clientreqid();
  void clear_has_clientreqid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr op_;
  ::google::protobuf::uint64 clientid_;
  ::google::protobuf::uint64 clientreqid_;
  friend struct ::protobuf_common_2frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// required bytes op = 1;
inline bool Request::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_op() {
  op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op();
}
inline const ::std::string& Request::op() const {
  // @@protoc_insertion_point(field_get:specpaxos.Request.op)
  return op_.GetNoArena();
}
inline void Request::set_op(const ::std::string& value) {
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:specpaxos.Request.op)
}
#if LANG_CXX11
inline void Request::set_op(::std::string&& value) {
  set_has_op();
  op_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:specpaxos.Request.op)
}
#endif
inline void Request::set_op(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:specpaxos.Request.op)
}
inline void Request::set_op(const void* value, size_t size) {
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:specpaxos.Request.op)
}
inline ::std::string* Request::mutable_op() {
  set_has_op();
  // @@protoc_insertion_point(field_mutable:specpaxos.Request.op)
  return op_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_op() {
  // @@protoc_insertion_point(field_release:specpaxos.Request.op)
  if (!has_op()) {
    return NULL;
  }
  clear_has_op();
  return op_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_op(::std::string* op) {
  if (op != NULL) {
    set_has_op();
  } else {
    clear_has_op();
  }
  op_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op);
  // @@protoc_insertion_point(field_set_allocated:specpaxos.Request.op)
}

// required uint64 clientid = 2;
inline bool Request::has_clientid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_clientid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::uint64 Request::clientid() const {
  // @@protoc_insertion_point(field_get:specpaxos.Request.clientid)
  return clientid_;
}
inline void Request::set_clientid(::google::protobuf::uint64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:specpaxos.Request.clientid)
}

// required uint64 clientreqid = 3;
inline bool Request::has_clientreqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_clientreqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_clientreqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_clientreqid() {
  clientreqid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientreqid();
}
inline ::google::protobuf::uint64 Request::clientreqid() const {
  // @@protoc_insertion_point(field_get:specpaxos.Request.clientreqid)
  return clientreqid_;
}
inline void Request::set_clientreqid(::google::protobuf::uint64 value) {
  set_has_clientreqid();
  clientreqid_ = value;
  // @@protoc_insertion_point(field_set:specpaxos.Request.clientreqid)
}

// -------------------------------------------------------------------

// UnloggedRequest

// required bytes op = 1;
inline bool UnloggedRequest::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnloggedRequest::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnloggedRequest::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnloggedRequest::clear_op() {
  op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op();
}
inline const ::std::string& UnloggedRequest::op() const {
  // @@protoc_insertion_point(field_get:specpaxos.UnloggedRequest.op)
  return op_.GetNoArena();
}
inline void UnloggedRequest::set_op(const ::std::string& value) {
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:specpaxos.UnloggedRequest.op)
}
#if LANG_CXX11
inline void UnloggedRequest::set_op(::std::string&& value) {
  set_has_op();
  op_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:specpaxos.UnloggedRequest.op)
}
#endif
inline void UnloggedRequest::set_op(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:specpaxos.UnloggedRequest.op)
}
inline void UnloggedRequest::set_op(const void* value, size_t size) {
  set_has_op();
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:specpaxos.UnloggedRequest.op)
}
inline ::std::string* UnloggedRequest::mutable_op() {
  set_has_op();
  // @@protoc_insertion_point(field_mutable:specpaxos.UnloggedRequest.op)
  return op_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnloggedRequest::release_op() {
  // @@protoc_insertion_point(field_release:specpaxos.UnloggedRequest.op)
  if (!has_op()) {
    return NULL;
  }
  clear_has_op();
  return op_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnloggedRequest::set_allocated_op(::std::string* op) {
  if (op != NULL) {
    set_has_op();
  } else {
    clear_has_op();
  }
  op_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op);
  // @@protoc_insertion_point(field_set_allocated:specpaxos.UnloggedRequest.op)
}

// required uint64 clientid = 2;
inline bool UnloggedRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnloggedRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnloggedRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnloggedRequest::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::uint64 UnloggedRequest::clientid() const {
  // @@protoc_insertion_point(field_get:specpaxos.UnloggedRequest.clientid)
  return clientid_;
}
inline void UnloggedRequest::set_clientid(::google::protobuf::uint64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:specpaxos.UnloggedRequest.clientid)
}

// required uint64 clientreqid = 3;
inline bool UnloggedRequest::has_clientreqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnloggedRequest::set_has_clientreqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnloggedRequest::clear_has_clientreqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnloggedRequest::clear_clientreqid() {
  clientreqid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientreqid();
}
inline ::google::protobuf::uint64 UnloggedRequest::clientreqid() const {
  // @@protoc_insertion_point(field_get:specpaxos.UnloggedRequest.clientreqid)
  return clientreqid_;
}
inline void UnloggedRequest::set_clientreqid(::google::protobuf::uint64 value) {
  set_has_clientreqid();
  clientreqid_ = value;
  // @@protoc_insertion_point(field_set:specpaxos.UnloggedRequest.clientreqid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace specpaxos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2frequest_2eproto
